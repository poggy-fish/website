{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useRef } from 'react';\nimport { Box, Container } from 'theme-ui';\nimport BlockTitle from 'components/block-title';\nimport Swiper from 'react-id-swiper';\nimport FeatureCard from 'components/feature-card';\nimport { FaLongArrowAltLeft, FaLongArrowAltRight } from 'react-icons/fa';\nimport featureImage1 from 'assets/tutorial-1-1.png';\nimport featureImage2 from 'assets/tutorial-1-2.png';\nimport featureImage3 from 'assets/tutorial-1-3.png';\nconst FeatureData = [{\n  image: featureImage1,\n  title: 'How to work with prototype design with adobe xd featuring tools',\n  comments: '22 Comments',\n  path: '/'\n}, {\n  image: featureImage2,\n  title: 'Create multiple artboard by using figma prototyping development',\n  comments: '15 Comments',\n  path: '/'\n}, {\n  image: featureImage3,\n  title: 'Convert your web layout theming easily with sketch zeplin extension',\n  comments: '12 Comments',\n  path: '/'\n}];\n\nconst Feature = () => {\n  const ref = useRef(null);\n\n  const goNext = () => {\n    if (ref.current !== null && ref.current.swiper !== null) {\n      ref.current.swiper.slideNext();\n    }\n  };\n\n  const goPrev = () => {\n    if (ref.current !== null && ref.current.swiper !== null) {\n      ref.current.swiper.slidePrev();\n    }\n  };\n\n  const params = {\n    slidesPerView: 3,\n    slidesPerGroup: 3,\n    spaceBetween: 30,\n    breakpoints: {\n      0: {\n        slidesPerView: 1,\n        slidesPerGroup: 1,\n        spaceBetween: 0\n      },\n      376: {\n        slidesPerView: 1,\n        slidesPerGroup: 1,\n        spaceBetween: 0\n      },\n      576: {\n        slidesPerView: 1,\n        slidesPerGroup: 1,\n        spaceBetween: 0\n      },\n      768: {\n        slidesPerView: 2,\n        slidesPerGroup: 2,\n        spaceBetween: 30\n      },\n      992: {\n        slidesPerView: 2,\n        slidesPerGroup: 2,\n        spaceBetween: 30\n      },\n      1200: {\n        slidesPerView: 3,\n        slidesPerGroup: 3,\n        spaceBetween: 30\n      }\n    }\n  };\n  return __jsx(Box, {\n    sx: styles.features,\n    id: \"news\"\n  }, __jsx(Container, null, __jsx(BlockTitle, {\n    slogan: \"Quality features\",\n    title: \"Tutorials that people love most\",\n    styles: styles.blockTitle\n  }), __jsx(Swiper, _extends({}, params, {\n    ref: ref\n  }), FeatureData.map((feature, index) => __jsx(\"div\", {\n    className: \"swiper-slider\",\n    key: `feature-card-key${index}`\n  }, __jsx(FeatureCard, {\n    image: feature.image,\n    title: feature.title,\n    commentCount: feature.comments,\n    path: feature.path\n  })))), __jsx(Box, {\n    sx: styles.carouselBtns\n  }, __jsx(\"button\", {\n    \"aria-label\": \"left btn\",\n    onClick: goPrev\n  }, __jsx(FaLongArrowAltLeft, null)), __jsx(\"button\", {\n    onClick: goNext,\n    \"aria-label\": \"right btn\"\n  }, __jsx(FaLongArrowAltRight, null)))));\n};\n\nexport default Feature;\nconst styles = {\n  blockTitle: {\n    textAlign: 'center'\n  },\n  features: {\n    pt: ['80px', null, null, null, null, null, '120px'],\n    pb: ['80px', null, null, null, '170px'],\n    backgroundColor: '#F8FAFC',\n    '.swiper-slider': {\n      overflowY: 'visible',\n      overflowX: 'hidden'\n    }\n  },\n  carouselBtns: {\n    display: ['flex', null, null, null, null, 'none'],\n    justifyContent: 'center',\n    alignItems: 'center',\n    button: {\n      border: 'none',\n      outline: 'none',\n      backgroundColor: 'transparent',\n      fontSize: [2, null, 4, null, 5],\n      color: '#BBC7D7',\n      width: 'auto',\n      padding: [0],\n      margin: '0 5px',\n      mt: '15px',\n      transition: '500ms',\n      '&:hover, &:active, &:focus': {\n        color: 'primary'\n      }\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}