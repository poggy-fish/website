{"ast":null,"code":"var __jsx = React.createElement;\n\n/** @jsx jsx */\nimport { jsx } from 'theme-ui';\nimport React, { useCallback } from 'react';\nimport Sticky from 'react-stickynode';\nimport { useStickyState } from '../contexts/app/app.provider';\nimport Header from './header/header';\nimport Footer from './footer/footer';\nimport { Waypoint } from 'react-waypoint';\nimport { useStickyDispatch } from '../contexts/app/app.provider';\nexport default function Layout({\n  children\n}) {\n  const isSticky = useStickyState('isSticky');\n  const dispatch = useStickyDispatch();\n  const setSticky = useCallback(() => dispatch({\n    type: 'SET_STICKY'\n  }), [dispatch]);\n  const removeSticky = useCallback(() => dispatch({\n    type: 'REMOVE_STICKY'\n  }), [dispatch]);\n\n  const onWaypointPositionChange = ({\n    currentPosition\n  }) => {\n    if (currentPosition === 'above') {\n      setSticky();\n    }\n\n    if (currentPosition === 'below') {\n      removeSticky();\n    }\n  };\n\n  return jsx(React.Fragment, null, jsx(Sticky, {\n    enabled: isSticky,\n    innerZ: 1000\n  }, jsx(Header, {\n    className: `${isSticky ? 'sticky' : 'unSticky'}`\n  })), jsx(Waypoint, {\n    onEnter: removeSticky,\n    onPositionChange: onWaypointPositionChange\n  }), jsx(\"main\", {\n    sx: {\n      variant: 'layout.main'\n    }\n  }, children), jsx(Footer, null));\n}","map":null,"metadata":{},"sourceType":"module"}